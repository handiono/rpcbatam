@model IEnumerable<rpc.Web.Job>

@{
    ViewBag.Title = "Index";
}
<script>
(function(document) {


	var tableFilter = (function(Arr) {

		var _input;

		function _onInputEvent(e) {
			_input = e.target;
			var tables = document.getElementsByClassName(_input.getAttribute('data-table'));
			Arr.forEach.call(tables, function(table) {
				Arr.forEach.call(table.tBodies, function(tbody) {
					Arr.forEach.call(tbody.rows, _filter);
				});
			});
		}

		function _filter(row) {
			var text = row.textContent.toLowerCase(), val = _input.value.toLowerCase();
			row.style.display = text.indexOf(val) === -1 ? 'none' : 'table-row';
		}

		return {
			init: function() {
				var inputs = document.getElementsByClassName('search');
				Arr.forEach.call(inputs, function(input) {
					input.oninput = _onInputEvent;
				});
			}
		};
	})(Array.prototype);

	document.addEventListener('readystatechange', function() {
		if (document.readyState === 'complete') {
			tableFilter.init();
		}
	});

})(document);


</script>


<h4>JOB </h4>


<p>
    @Html.ActionLink("Create New", "Create")
</p>
Search <input type="search" data-table="order-table" placeholder="Filter" class="search" />
<br />
<br />

<table class="order-table table">
   
        <tr>
            <th>
               JOB ID
            </th>

            <th>
                JOB NAME
            </th>
            <th>

            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.JobID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JobName)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.JobID }) |
                    @Html.ActionLink("Add WorkCenter", "workcenter", new { id = item.JobID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.JobID })
                </td>
            </tr>
        }

    </table>
